{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\R.Anvesh Reddy\\\\Desktop\\\\web\\\\Anvesh\\\\happy\\\\src\\\\Components\\\\Employee.js\";\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport PopUp from \"./Utils/PopUp\";\n\nconst Activity = props => {\n  const [update, setUpdate] = useState(false);\n\n  const close = () => {\n    setUpdate(false);\n  };\n\n  const dispatch = useDispatch();\n\n  const deleteEmployee = () => {\n    dispatch({\n      type: \"DELETE_EMPLOYEE\",\n      payload: {\n        id: props.id\n      }\n    });\n  };\n\n  console.log(props.role);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"Employee: \", props.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"Role:\", Object.keys(props.role).map(red => red.label + \",\")), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: deleteEmployee,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"Delete\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setUpdate(!update),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"Update\"), update && /*#__PURE__*/React.createElement(PopUp, {\n    data: {\n      empName: props.name,\n      empRole: \"hello\",\n      empId: props.id\n    },\n    close: close,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Activity;","map":{"version":3,"sources":["C:/Users/R.Anvesh Reddy/Desktop/web/Anvesh/happy/src/Components/Employee.js"],"names":["React","useState","useDispatch","PopUp","Activity","props","update","setUpdate","close","dispatch","deleteEmployee","type","payload","id","console","log","role","name","Object","keys","map","red","label","empName","empRole","empId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,eAAlB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMO,KAAK,GAAG,MAAM;AAClBD,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAFD;;AAIA,QAAME,QAAQ,GAAGP,WAAW,EAA5B;;AACA,QAAMQ,cAAc,GAAG,MAAM;AAC3BD,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE,iBADC;AAEPC,MAAAA,OAAO,EAAE;AACPC,QAAAA,EAAE,EAAER,KAAK,CAACQ;AADH;AAFF,KAAD,CAAR;AAMD,GAPD;;AAQAC,EAAAA,OAAO,CAACC,GAAR,CAAYV,KAAK,CAACW,IAAlB;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAcX,KAAK,CAACY,IAApB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAEGC,MAAM,CAACC,IAAP,CAAYd,KAAK,CAACW,IAAlB,EAAwBI,GAAxB,CAA6BC,GAAD,IAASA,GAAG,CAACC,KAAJ,GAAY,GAAjD,CAFH,CAFF,eAME;AAAQ,IAAA,OAAO,EAAEZ,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAQ,IAAA,OAAO,EAAE,MAAMH,SAAS,CAAC,CAACD,MAAF,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,EAQGA,MAAM,iBACL,oBAAC,KAAD;AACE,IAAA,IAAI,EAAE;AACJiB,MAAAA,OAAO,EAAElB,KAAK,CAACY,IADX;AAEJO,MAAAA,OAAO,EAAE,OAFL;AAGJC,MAAAA,KAAK,EAAEpB,KAAK,CAACQ;AAHT,KADR;AAME,IAAA,KAAK,EAAEL,KANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CADF;AAqBD,CAtCD;;AAwCA,eAAeJ,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport PopUp from \"./Utils/PopUp\";\n\nconst Activity = (props) => {\n  const [update, setUpdate] = useState(false);\n\n  const close = () => {\n    setUpdate(false);\n  };\n\n  const dispatch = useDispatch();\n  const deleteEmployee = () => {\n    dispatch({\n      type: \"DELETE_EMPLOYEE\",\n      payload: {\n        id: props.id,\n      },\n    });\n  };\n  console.log(props.role);\n  return (\n    <div>\n      <p>Employee: {props.name}</p>\n      <p>\n        Role:\n        {Object.keys(props.role).map((red) => red.label + \",\")}\n      </p>\n      <button onClick={deleteEmployee}>Delete</button>\n      <button onClick={() => setUpdate(!update)}>Update</button>\n      {update && (\n        <PopUp\n          data={{\n            empName: props.name,\n            empRole: \"hello\",\n            empId: props.id,\n          }}\n          close={close}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Activity;\n"]},"metadata":{},"sourceType":"module"}