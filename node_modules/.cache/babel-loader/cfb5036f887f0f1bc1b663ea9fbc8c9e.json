{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\R.Anvesh Reddy\\\\Desktop\\\\web\\\\Anvesh\\\\happy\\\\src\\\\Components\\\\Utils\\\\PopUp.js\";\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Select from \"react-select\";\n\nconst createRandomString = function (strLength) {\n  strLength = typeof strLength == \"number\" && strLength > 0 ? strLength : false;\n\n  if (strLength) {\n    var possibleCharacters = \"abcdefghijklmnopqrstuvwxyz0123456789\";\n    var str = \"\";\n\n    for (var i = 1; i <= strLength; i++) {\n      var randomCharacter = possibleCharacters.charAt(Math.floor(Math.random() * possibleCharacters.length));\n      str += randomCharacter;\n    }\n\n    return str;\n  } else {\n    return false;\n  }\n};\n\nexport default function PopUp(props) {\n  const dispatch = useDispatch();\n  const [data, setData] = useState({\n    empName: props.data ? props.data.empName : \"Hey there enter Employee name here...!\",\n    empRole: props.data ? [props.data.empRole] : \"Hey there select Employee Role here...!\"\n  });\n\n  const handleChange = e => {\n    e.persist();\n    setData(prev => ({ ...prev,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const addEmployee = () => {\n    dispatch({\n      type: \"CREATE_EMPLOYEE\",\n      payload: {\n        id: createRandomString(16),\n        empName: data.empName,\n        empRole: data.empRole\n      }\n    });\n  };\n\n  const updateEmployee = () => {\n    console.log(\"up\");\n    dispatch({\n      type: \"UPDATE_EMPLOYEE\",\n      payload: {\n        id: props.data.empId,\n        empName: data.empName,\n        empRole: data.empRole\n      }\n    });\n    console.log(data.empRole);\n  };\n\n  const options = [{\n    value: \"web developer\",\n    label: \"Web Developer\"\n  }, {\n    value: \"intern\",\n    label: \"Intern\"\n  }, {\n    value: \"admin\",\n    label: \"Admin\"\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"mypopup\",\n    className: \"popup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"close\",\n    onClick: props.close,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"addForm \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hello-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"empName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, \"Employee Name\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hello-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"empName\",\n    name: \"empName\",\n    onFocus: e => props.data ? e.target.value = data.empName : e.target.value = \"\",\n    value: data.empName,\n    placeholder: \"Add an Employee here...!\",\n    onChange: e => handleChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hello-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"empRole\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, \"Employee Role\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hello-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    id: \"empRole\",\n    name: \"empRole\",\n    value: data.empRole,\n    onChange: e => handleChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"australia\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, \"Australia\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"canada\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, \"Canada\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"usa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, \"USA\")), /*#__PURE__*/React.createElement(Select, {\n    closeMenuOnSelect: false,\n    defaultValue: [colourOptions[0], colourOptions[1]],\n    isMulti: true,\n    options: options,\n    styles: colourStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"addButton\",\n    onClick: props.data ? updateEmployee : addEmployee,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, props.data ? \"Update\" : \"Add\")))));\n}","map":{"version":3,"sources":["C:/Users/R.Anvesh Reddy/Desktop/web/Anvesh/happy/src/Components/Utils/PopUp.js"],"names":["React","useState","useDispatch","Select","createRandomString","strLength","possibleCharacters","str","i","randomCharacter","charAt","Math","floor","random","length","PopUp","props","dispatch","data","setData","empName","empRole","handleChange","e","persist","prev","target","name","value","addEmployee","type","payload","id","updateEmployee","console","log","empId","options","label","close","colourOptions","colourStyles"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Select from \"react-select\";\r\n\r\nconst createRandomString = function (strLength) {\r\n  strLength = typeof strLength == \"number\" && strLength > 0 ? strLength : false;\r\n  if (strLength) {\r\n    var possibleCharacters = \"abcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n    var str = \"\";\r\n    for (var i = 1; i <= strLength; i++) {\r\n      var randomCharacter = possibleCharacters.charAt(\r\n        Math.floor(Math.random() * possibleCharacters.length)\r\n      );\r\n      str += randomCharacter;\r\n    }\r\n    return str;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default function PopUp(props) {\r\n  const dispatch = useDispatch();\r\n  const [data, setData] = useState({\r\n    empName: props.data\r\n      ? props.data.empName\r\n      : \"Hey there enter Employee name here...!\",\r\n    empRole: props.data\r\n      ? [props.data.empRole]\r\n      : \"Hey there select Employee Role here...!\",\r\n  });\r\n  const handleChange = (e) => {\r\n    e.persist();\r\n    setData((prev) => ({ ...prev, [e.target.name]: e.target.value }));\r\n  };\r\n\r\n  const addEmployee = () => {\r\n    dispatch({\r\n      type: \"CREATE_EMPLOYEE\",\r\n      payload: {\r\n        id: createRandomString(16),\r\n        empName: data.empName,\r\n        empRole: data.empRole,\r\n      },\r\n    });\r\n  };\r\n\r\n  const updateEmployee = () => {\r\n    console.log(\"up\");\r\n    dispatch({\r\n      type: \"UPDATE_EMPLOYEE\",\r\n      payload: {\r\n        id: props.data.empId,\r\n        empName: data.empName,\r\n        empRole: data.empRole,\r\n      },\r\n    });\r\n    console.log(data.empRole);\r\n  };\r\n  const options = [\r\n    { value: \"web developer\", label: \"Web Developer\" },\r\n    { value: \"intern\", label: \"Intern\" },\r\n    { value: \"admin\", label: \"Admin\" },\r\n  ];\r\n  return (\r\n    <div id=\"mypopup\" className=\"popup\">\r\n      <div className=\"popup-content\">\r\n        <span className=\"close\" onClick={props.close}>\r\n          &times;\r\n        </span>\r\n\r\n        <div className=\"addForm \">\r\n          <div className=\"row\">\r\n            <div className=\"hello-1\">\r\n              <label htmlFor=\"empName\">Employee Name</label>\r\n            </div>\r\n            <div className=\"hello-2\">\r\n              <input\r\n                type=\"text\"\r\n                id=\"empName\"\r\n                name=\"empName\"\r\n                onFocus={(e) =>\r\n                  props.data\r\n                    ? (e.target.value = data.empName)\r\n                    : (e.target.value = \"\")\r\n                }\r\n                value={data.empName}\r\n                placeholder=\"Add an Employee here...!\"\r\n                onChange={(e) => handleChange(e)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"hello-1\">\r\n              <label htmlFor=\"empRole\">Employee Role</label>\r\n            </div>\r\n            <div className=\"hello-2\">\r\n              <select\r\n                id=\"empRole\"\r\n                name=\"empRole\"\r\n                value={data.empRole}\r\n                onChange={(e) => handleChange(e)}\r\n              >\r\n                <option value=\"australia\">Australia</option>\r\n                <option value=\"canada\">Canada</option>\r\n                <option value=\"usa\">USA</option>\r\n              </select>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                defaultValue={[colourOptions[0], colourOptions[1]]}\r\n                isMulti\r\n                options={options}\r\n                styles={colourStyles}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <button\r\n              className=\"addButton\"\r\n              onClick={props.data ? updateEmployee : addEmployee}\r\n            >\r\n              {props.data ? \"Update\" : \"Add\"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}